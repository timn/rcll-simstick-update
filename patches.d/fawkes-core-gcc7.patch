From 3043b85c1c2d753a93f2490883fd78f68fb4afeb Mon Sep 17 00:00:00 2001
From: Till Hofmann <hofmann@kbsg.rwth-aachen.de>
Date: Mon, 10 Apr 2017 10:14:36 +0200
Subject: [PATCH 1/6] utils: strdup correct registry name in shared memory
 initialization

Instead of strdup'ing __registry_name into itself, use the registry name
passed as constructor parameter.

This was found with GCC7 which complains about strup'ing null strings.
---
 src/libs/utils/ipc/shm.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/libs/utils/ipc/shm.cpp b/src/libs/utils/ipc/shm.cpp
index 4caab3c63..0a99df298 100644
--- a/src/libs/utils/ipc/shm.cpp
+++ b/src/libs/utils/ipc/shm.cpp
@@ -378,7 +378,7 @@ SharedMemory::SharedMemory(const char *magic_token,
 
   __registry_name = NULL;
   if (registry_name) {
-    __registry_name = strdup(__registry_name);
+    __registry_name = strdup(registry_name);
   }
 
   try {
-- 
2.14.3

From 65be83949fcd4587a4dfecdda7ca0388d1a59425 Mon Sep 17 00:00:00 2001
From: Till Hofmann <hofmann@kbsg.rwth-aachen.de>
Date: Mon, 10 Apr 2017 11:18:16 +0200
Subject: [PATCH 2/6] libinterface: copy full type ID and then enforce
 null-terminated strings

The functions strncpy and snprintf expect the null terminator to be
within the specified size of the string:
  The  strncpy() function is similar, except that at most n bytes of src
  are copied.  Warning: If there is no null byte among the first n bytes
  of src, the string placed in dest will not be null-terminated.

  The functions snprintf() and vsnprintf() write at most size bytes
  (including the terminating  null  byte ('\0')) to str.

GCC7 complains if the input string of snprintf() is longer than the
destination string. For consistency reasons, always strncpy() and
snprintf() the whole string (including the last byte), and then enforce
the string to be null-terminated. This retains the old behavior
(truncating the string if it isn't null-terminated) but avoids the gcc
error.
---
 src/libs/interface/interface.cpp | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/src/libs/interface/interface.cpp b/src/libs/interface/interface.cpp
index 758eabba2..f0e1f122f 100644
--- a/src/libs/interface/interface.cpp
+++ b/src/libs/interface/interface.cpp
@@ -539,18 +539,20 @@ Interface::datasize() const
 
 /** Set type, ID and UID.
  * Sets type and ID, UID is generated automatically as Type::ID.
- * @param type string, a maxmimum of __INTERFACE_TYPE_SIZE bytes are copied
- * @param ID string, a maxmimum of __INTERFACE_ID_SIZE bytes are copied
+ * @param type string, a maximum of __INTERFACE_TYPE_SIZE bytes are copied
+ * @param ID string, a maximum of __INTERFACE_ID_SIZE bytes are copied
  */
 void
 Interface::set_type_id(const char *type, const char *id)
 {
+  strncpy(__type, type, __INTERFACE_TYPE_SIZE + 1);
+  strncpy(__id, id, __INTERFACE_ID_SIZE + 1);
+  snprintf(__uid, __INTERFACE_UID_SIZE + 1, "%s::%s", __type, __id);
+  // Enforce null-terminated strings. If the input was not properly
+  // null-terminated, this truncated the last character of the string.
   __type[__INTERFACE_TYPE_SIZE] = 0;
   __id[__INTERFACE_ID_SIZE] = 0;
   __uid[__INTERFACE_UID_SIZE] = 0;
-  strncpy(__type, type, __INTERFACE_TYPE_SIZE);
-  strncpy(__id, id, __INTERFACE_ID_SIZE);
-  snprintf(__uid, __INTERFACE_UID_SIZE, "%s::%s", __type, __id);
 }
 
 
-- 
2.14.3

From 5905f8e8922dbb8fdb1e89a20784058c8a01c310 Mon Sep 17 00:00:00 2001
From: Till Hofmann <hofmann@kbsg.rwth-aachen.de>
Date: Mon, 10 Apr 2017 12:13:04 +0200
Subject: [PATCH 3/6] laser-pointclouds: disable deprecated warnings due to
 throw() in glibmm

glibmm uses dynamic exception specifications (throw() specifications)
which are deprecated in C++11.
---
 src/plugins/laser-pointclouds/Makefile | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/src/plugins/laser-pointclouds/Makefile b/src/plugins/laser-pointclouds/Makefile
index ef506c9a4..e78bcac6a 100644
--- a/src/plugins/laser-pointclouds/Makefile
+++ b/src/plugins/laser-pointclouds/Makefile
@@ -27,7 +27,9 @@ OBJS_laser_pointclouds = laser_pointcloud_plugin.o laser_pointcloud_thread.o
 OBJS_all = $(OBJS_laser_pointclouds)
 
 ifeq ($(HAVE_PCL)$(HAVE_TF),11)
-  CFLAGS  += $(CFLAGS_PCL) $(CFLAGS_TF) -Wno-unknown-pragmas -Wno-deprecated-declarations
+  # disable deprecated warnings because glibmm uses deprecated dynamic exception
+  # specifications (throw() specifications)
+  CFLAGS  += $(CFLAGS_PCL) $(CFLAGS_TF) -Wno-unknown-pragmas -Wno-deprecated
   LDFLAGS += $(LDFLAGS_PCL) $(LDFLAGS_TF)
 
   PLUGINS_all = $(PLUGINDIR)/laser-pointclouds.so
-- 
2.14.3

From 156e31603f9a9c12fc42a52256a845c468b4aeeb Mon Sep 17 00:00:00 2001
From: Till Hofmann <hofmann@kbsg.rwth-aachen.de>
Date: Mon, 24 Apr 2017 12:54:09 +0200
Subject: [PATCH 4/6] colli: remove deprecated throw() specifications

Using throw() is deprecated and results in a warning with GCC7.
---
 src/plugins/colli/utils/rob/roboshape_colli.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/plugins/colli/utils/rob/roboshape_colli.h b/src/plugins/colli/utils/rob/roboshape_colli.h
index e23db2e82..12d867804 100644
--- a/src/plugins/colli/utils/rob/roboshape_colli.h
+++ b/src/plugins/colli/utils/rob/roboshape_colli.h
@@ -50,7 +50,7 @@ class RoboShapeColli : public RoboShape
   RoboShapeColli( const char * cfg_prefix,
                   Logger* logger,
                   Configuration* config,
-                  int readings_per_degree = 1 ) throw (int);
+                  int readings_per_degree = 1 );
  ~RoboShapeColli();
 
   ///\brief Returns the robots length for a specific angle.
@@ -81,7 +81,7 @@ inline
 RoboShapeColli::RoboShapeColli( const char * cfg_prefix,
                                 Logger* logger,
                                 Configuration* config,
-                                int readings_per_degree ) throw (int)
+                                int readings_per_degree )
  : RoboShape( cfg_prefix, logger, config)
 {
   resolution_ = readings_per_degree;
-- 
2.14.3

From 78b8f3b9a933e07850304159c5662ac13460e6a9 Mon Sep 17 00:00:00 2001
From: Till Hofmann <hofmann@kbsg.rwth-aachen.de>
Date: Mon, 24 Apr 2017 13:02:25 +0200
Subject: [PATCH 5/6] clips: disable deprecated warnings due to throw() in
 glibmm

glibmm uses dynamic exception specifications (throw() specifications),
which are deprecated in C++11 and give a warning in GCC7.
---
 etc/buildsys/clips.mk | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/etc/buildsys/clips.mk b/etc/buildsys/clips.mk
index 679ae80d9..07302e3b1 100644
--- a/etc/buildsys/clips.mk
+++ b/etc/buildsys/clips.mk
@@ -43,7 +43,10 @@ else
 endif
 
 ifeq ($(HAVE_CLIPS),1)
-  CFLAGS_CLIPS  = -DHAVE_CLIPS $(shell $(PKGCONFIG) --cflags 'clipsmm-1.0')
+  # -Wno-deprecated is needed with GCC7 because glibmm still uses throw()
+  #  specifications, which are deprecated and cause a GCC warning.
+  CFLAGS_CLIPS  = -DHAVE_CLIPS $(shell $(PKGCONFIG) --cflags 'clipsmm-1.0') \
+                  -Wno-deprecated
   LDFLAGS_CLIPS = $(shell $(PKGCONFIG) --libs 'clipsmm-1.0')
   # The following is required since the GCC 5 libstdc++ deprecates
   # std::auto_ptr according to C++11. This causes warnings since this
-- 
2.14.3

From 3e8b153fbf84c16c99cd3440a03cea1632d1c14b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Victor=20Matar=C3=A9?= <matare@lih.rwth-aachen.de>
Date: Tue, 4 Jul 2017 18:50:43 +0200
Subject: [PATCH 6/6] fuse_viewer: fix invalid enum->bool conversion

---
 src/tools/vision/fuse_viewer/fuse_viewer_gui.cpp | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/tools/vision/fuse_viewer/fuse_viewer_gui.cpp b/src/tools/vision/fuse_viewer/fuse_viewer_gui.cpp
index 61983f71f..2fa548942 100644
--- a/src/tools/vision/fuse_viewer/fuse_viewer_gui.cpp
+++ b/src/tools/vision/fuse_viewer/fuse_viewer_gui.cpp
@@ -153,7 +153,7 @@ FuseViewerGtkWindow::on_service_removed( fawkes::NetworkService* service )
 void
 FuseViewerGtkWindow::on_fuse_image_selected()
 {
-  __img_list_widget->set_sensitive(Gtk::SENSITIVITY_OFF);
+  __img_list_widget->set_sensitive(false);
   std::string host;
   unsigned short port;
   std::string image_id;
@@ -173,7 +173,7 @@ FuseViewerGtkWindow::on_fuse_image_selected()
     __image_viewport->add(*__img_widget);
     __image_viewport->set_size_request(__cam->pixel_width(), __cam->pixel_height());
     show_all_children();
-    __save_type->set_sensitive(Gtk::SENSITIVITY_ON);
+    __save_type->set_sensitive(true);
 
     set_status(image_id, host, port);
   }
@@ -182,7 +182,7 @@ FuseViewerGtkWindow::on_fuse_image_selected()
     e.print_trace();
   }
 
-  __img_list_widget->set_sensitive(Gtk::SENSITIVITY_ON);
+  __img_list_widget->set_sensitive(true);
 }
 
 /** Signal handler that is called if the 'Auto save' checkbox status changes */
@@ -268,7 +268,7 @@ FuseViewerGtkWindow::close_image()
     __image_viewport->remove();
     delete __img_widget;
     __img_widget = NULL;
-    __save_type->set_sensitive(Gtk::SENSITIVITY_OFF);
+    __save_type->set_sensitive(false);
   }
 
   if (__cam) {
-- 
2.14.3

